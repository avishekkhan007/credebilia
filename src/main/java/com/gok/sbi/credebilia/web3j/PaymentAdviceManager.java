package com.gok.sbi.credebilia.web3j;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes8;
import org.web3j.abi.datatypes.generated.Uint16;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.9.4.
 */
@SuppressWarnings("rawtypes")
public class PaymentAdviceManager extends Contract {
    public static final String BINARY = "60806040523480156200001157600080fd5b5060405162002bb138038062002bb18339810160408190526200003491620000b4565b600080546001600160a01b03199081166001600160a01b0397881617909155600180548216958716959095179094556002805485169386169390931790925560038054841691851691909117905560048054909216921691909117905562000124565b80516001600160a01b0381168114620000af57600080fd5b919050565b600080600080600060a08688031215620000cd57600080fd5b620000d88662000097565b9450620000e86020870162000097565b9350620000f86040870162000097565b9250620001086060870162000097565b9150620001186080870162000097565b90509295509295909350565b612a7d80620001346000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063b062fd0711610071578063b062fd0714610160578063bd240e0714610180578063c3b4e23b14610193578063db0e782d146101b4578063e47262de146101c7578063eec39a1a146101dc57600080fd5b806334ed52ef146100b957806357574cd8146100e25780637ea7aa0b146100f55780638eb3e50114610117578063a2552e501461013a578063a7b1747e1461014d575b600080fd5b6100cc6100c7366004611e37565b6101fe565b6040516100d99190611eb0565b60405180910390f35b6100cc6100f0366004611e37565b6103b3565b610108610103366004611faf565b610507565b6040516100d993929190611ffc565b61012a610125366004611e37565b6106d9565b60405190151581526020016100d9565b610108610148366004612053565b610762565b6100cc61015b366004611e37565b610971565b61017361016e366004611e37565b610aa5565b6040516100d99190612226565b61010861018e366004611faf565b610bd5565b6101a66101a1366004611e37565b610d9c565b6040519081526020016100d9565b6101086101c2366004611faf565b610ea9565b6101da6101d536600461226c565b611070565b005b6101ef6101ea366004612053565b6118c7565b6040516100d993929190612436565b600354604051633bd43b0560e11b815260609183916001600160a01b03909116906377a8760a906102339084906004016124a6565b60206040518083038186803b15801561024b57600080fd5b505afa15801561025f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028391906124bb565b6102a85760405162461bcd60e51b815260040161029f906124d4565b60405180910390fd5b600354604051633bd43b0560e11b81526000916001600160a01b0316906377a8760a906102d99087906004016124a6565b60206040518083038186803b1580156102f157600080fd5b505afa158015610305573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032991906124bb565b60035460405163089bbd3d60e01b8152600481018390529192506001600160a01b03169063089bbd3d906024015b60006040518083038186803b15801561036f57600080fd5b505afa158015610383573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ab9190810190612545565b949350505050565b600354604051633bd43b0560e11b815260609183916001600160a01b03909116906377a8760a906103e89084906004016124a6565b60206040518083038186803b15801561040057600080fd5b505afa158015610414573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043891906124bb565b6104545760405162461bcd60e51b815260040161029f906124d4565b600354604051633bd43b0560e11b81526000916001600160a01b0316906377a8760a906104859087906004016124a6565b60206040518083038186803b15801561049d57600080fd5b505afa1580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d591906124bb565b60035460405163013b217f60e01b8152600481018390529192506001600160a01b03169063013b217f90602401610357565b6003546040516306e666a160e31b8152606091600091829184916001600160a01b0390911690633733350890610545908a908a908a90600401612579565b60006040518083038186803b15801561055d57600080fd5b505afa158015610571573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610599919081019061259e565b825191955093509091506001600160401b038111156105ba576105ba611ec3565b6040519080825280602002602001820160405280156105e3578160200160208202803683370190505b50935060005b81518110156106ce5760035482516001600160a01b039091169063c3a1d1b99084908490811061061b5761061b612656565b60200260200101516040518263ffffffff1660e01b815260040161064191815260200190565b60206040518083038186803b15801561065957600080fd5b505afa15801561066d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106919190612677565b8582815181106106a3576106a3612656565b6001600160c01b031990921660209283029190910190910152806106c6816126aa565b9150506105e9565b505093509350939050565b600354604051633bd43b0560e11b81526000916001600160a01b0316906377a8760a9061070a9085906004016124a6565b60206040518083038186803b15801561072257600080fd5b505afa158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a91906124bb565b151592915050565b60606000806000878760405160200161077c9291906126c5565b60408051808303601f1901815290829052805160209091012060035463024149b560e11b83526001600160c01b03198216600484015260248301899052604483018890529092506060916001600160a01b0390911690630482936a9060640160006040518083038186803b1580156107f357600080fd5b505afa158015610807573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261082f919081019061259e565b825191965094509091506001600160401b0381111561085057610850611ec3565b604051908082528060200260200182016040528015610879578160200160208202803683370190505b50945060005b81518110156109645760035482516001600160a01b039091169063c3a1d1b9908490849081106108b1576108b1612656565b60200260200101516040518263ffffffff1660e01b81526004016108d791815260200190565b60206040518083038186803b1580156108ef57600080fd5b505afa158015610903573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109279190612677565b86828151811061093957610939612656565b6001600160c01b0319909216602092830291909101909101528061095c816126aa565b91505061087f565b5050509450945094915050565b600354604051633bd43b0560e11b815260609183916001600160a01b03909116906377a8760a906109a69084906004016124a6565b60206040518083038186803b1580156109be57600080fd5b505afa1580156109d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f691906124bb565b610a125760405162461bcd60e51b815260040161029f906124d4565b6003546001600160a01b03166323aa8386610a2c85611ad0565b6040518263ffffffff1660e01b8152600401610a4a91815260200190565b60006040518083038186803b158015610a6257600080fd5b505afa158015610a76573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a9e9190810190612545565b9392505050565b610aad611d9b565b600354604051633bd43b0560e11b815283916001600160a01b0316906377a8760a90610add9084906004016124a6565b60206040518083038186803b158015610af557600080fd5b505afa158015610b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2d91906124bb565b610b495760405162461bcd60e51b815260040161029f906124d4565b6003546001600160a01b03166360fda77c610b6385611ad0565b6040518263ffffffff1660e01b8152600401610b8191815260200190565b60006040518083038186803b158015610b9957600080fd5b505afa158015610bad573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a9e919081019061270a565b60035460405163a63729d960e01b8152606091600091829184916001600160a01b039091169063a63729d990610c13908a908a908a90600401612579565b60006040518083038186803b158015610c2b57600080fd5b505afa158015610c3f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c67919081019061259e565b825191955093509091506001600160401b03811115610c8857610c88611ec3565b604051908082528060200260200182016040528015610cb1578160200160208202803683370190505b50935060005b81518110156106ce5760035482516001600160a01b039091169063c3a1d1b990849084908110610ce957610ce9612656565b60200260200101516040518263ffffffff1660e01b8152600401610d0f91815260200190565b60206040518083038186803b158015610d2757600080fd5b505afa158015610d3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5f9190612677565b858281518110610d7157610d71612656565b6001600160c01b03199092166020928302919091019091015280610d94816126aa565b915050610cb7565b600354604051633bd43b0560e11b815260009182916001916001600160a01b0316906377a8760a90610dd29087906004016124a6565b60206040518083038186803b158015610dea57600080fd5b505afa158015610dfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2291906124bb565b610e2c91906128c5565b60035460405163e04f3cd160e01b8152600481018390529192506001600160a01b03169063e04f3cd19060240160206040518083038186803b158015610e7157600080fd5b505afa158015610e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9e91906124bb565b600354604051633dc4108760e21b8152606091600091829184916001600160a01b039091169063f710421c90610ee7908a908a908a90600401612579565b60006040518083038186803b158015610eff57600080fd5b505afa158015610f13573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f3b919081019061259e565b825191955093509091506001600160401b03811115610f5c57610f5c611ec3565b604051908082528060200260200182016040528015610f85578160200160208202803683370190505b50935060005b81518110156106ce5760035482516001600160a01b039091169063c3a1d1b990849084908110610fbd57610fbd612656565b60200260200101516040518263ffffffff1660e01b8152600401610fe391815260200190565b60206040518083038186803b158015610ffb57600080fd5b505afa15801561100f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110339190612677565b85828151811061104557611045612656565b6001600160c01b03199092166020928302919091019091015280611068816126aa565b915050610f8b565b60208101516000805460405182916001600160a01b03169061109890339086906024016128dc565b60408051601f198184030181529181526020820180516001600160e01b03166357c7418360e01b179052516110cd9190612900565b6000604051808303816000865af19150503d806000811461110a576040519150601f19603f3d011682016040523d82523d6000602084013e61110f565b606091505b5091509150816111615760405162461bcd60e51b815260206004820152601760248201527f7065726d697373696f6e732063616c6c206661696c6564000000000000000000604482015260640161029f565b80806020019051810190611175919061291c565b6111f55760405162461bcd60e51b8152602060048201526044602482018190527f6163636f756e7420646f6573206e6f7420657869737473206f72206578697374908201527f732062757420646f65736e27742062656c6f6e6720746f20706173736564206f6064820152631c99d25960e21b608482015260a40161029f565b60015461010085015160405163ce32047160e01b815286926001600160a01b03169163ce3204719161122a9190600401611eb0565b60206040518083038186803b15801561124257600080fd5b505afa158015611256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127a919061291c565b6112be5760405162461bcd60e51b815260206004820152601560248201527456656e646f7220474944206e6f742061637469766560581b604482015260640161029f565b60025461014082015160405163223d7cd160e21b81526001600160a01b03909216916388f5f344916112f291600401611eb0565b60206040518083038186803b15801561130a57600080fd5b505afa15801561131e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611342919061291c565b61139a5760405162461bcd60e51b815260206004820152602360248201527f50726f637572696e6720456e746974792047494420646f6573206e6f742065786044820152621a5cdd60ea1b606482015260840161029f565b600354606086015160208088015160405189946000946001600160a01b03909116936354c914bd936113ce939091016126c5565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161140091906124a6565b60206040518083038186803b15801561141857600080fd5b505afa15801561142c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145091906124bb565b90508161018001516000148015611465575080155b80611480575081610180015160011480156114805750600081115b6114cc5760405162461bcd60e51b815260206004820152601760248201527f696e76616c696420616d656e646d656e742076616c7565000000000000000000604482015260640161029f565b610180820181905260c08701516004805460405163133ab11d60e11b81526001600160a01b0390911691632675623a9161150891859101611eb0565b60206040518083038186803b15801561152057600080fd5b505afa158015611534573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611558919061291c565b6115bb5760405162461bcd60e51b815260206004820152602e60248201527f5468652063757272656e637920646f65736e27742065786973747320696e207460448201526d1a19481b185d195cdd081b1a5cdd60921b606482015260840161029f565b6003546040805163fb0e0a0960e01b815290516000926001600160a01b03169163fb0e0a09916004808301926020929190829003018186803b15801561160057600080fd5b505afa158015611614573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163891906124bb565b905060006116458a611b66565b600354604051633bd43b0560e11b81529192506001600160a01b0316906377a8760a906116769084906004016124a6565b60206040518083038186803b15801561168e57600080fd5b505afa1580156116a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c691906124bb565b156117135760405162461bcd60e51b815260206004820181905260248201527f5061796d656e742041647669636520616c7265616479207075626c6973686564604482015260640161029f565b6001600160c01b031981168a526003546001600160a01b0316631a73a9848261173d85600161293e565b6040516001600160e01b031960e085901b1681526001600160c01b031990921660048301526024820152604401600060405180830381600087803b15801561178457600080fd5b505af1158015611798573d6000803e3d6000fd5b505050506117a6828b611bbb565b600360009054906101000a90046001600160a01b03166001600160a01b0316635f7e6b1a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156117f657600080fd5b505af115801561180a573d6000803e3d6000fd5b5050600354604051635d2d00c360e11b81526001600160a01b03909116925063ba5a018691506118409085908e90600401612956565b600060405180830381600087803b15801561185a57600080fd5b505af115801561186e573d6000803e3d6000fd5b50508b5160608d01516101408e01516101808f01516040517f738fcd1bd2fd39cd483d6e0c77c7388df844778d3a1698aee7d3f4031cd4b7b796506118b3955061296f565b60405180910390a150505050505050505050565b6060600080600087876040516020016118e19291906126c5565b60408051808303601f1901815290829052805160209091012060035463024149b560e11b83526001600160c01b03198216600484015260248301899052604483018890529092506060916001600160a01b0390911690630482936a9060640160006040518083038186803b15801561195857600080fd5b505afa15801561196c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611994919081019061259e565b825191965094509091506001600160401b038111156119b5576119b5611ec3565b6040519080825280602002602001820160405280156119ee57816020015b6119db611d9b565b8152602001906001900390816119d35790505b50945060005b81518110156109645760035482516001600160a01b03909116906360fda77c90849084908110611a2657611a26612656565b60200260200101516040518263ffffffff1660e01b8152600401611a4c91815260200190565b60006040518083038186803b158015611a6457600080fd5b505afa158015611a78573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611aa0919081019061270a565b868281518110611ab257611ab2612656565b60200260200101819052508080611ac8906126aa565b9150506119f4565b600354604051633bd43b0560e11b81526000916001916001600160a01b03909116906377a8760a90611b069086906004016124a6565b60206040518083038186803b158015611b1e57600080fd5b505afa158015611b32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5691906124bb565b611b6091906128c5565b92915050565b6000816020015182606001518360800151846101000151856101200151866101800151604051602001611b9e969594939291906129b8565b604051602081830303815290604052805190602001209050919050565b60035460608201516020808401516040516001600160a01b039094169363e9e323c693611beb93909291016126c5565b60408051601f198184030181529082905280516020909101206001600160e01b031960e084901b1682526001600160c01b031916600482015260248101859052604401600060405180830381600087803b158015611c4857600080fd5b505af1158015611c5c573d6000803e3d6000fd5b5050600354602084015160405163145e7aed60e31b81526001600160a01b03909216935063a2f3d7689250611c95918690600401612a25565b600060405180830381600087803b158015611caf57600080fd5b505af1158015611cc3573d6000803e3d6000fd5b505060035461010084015160405163e663d7ff60e01b81526001600160a01b03909216935063e663d7ff9250611cfd918690600401612a25565b600060405180830381600087803b158015611d1757600080fd5b505af1158015611d2b573d6000803e3d6000fd5b505060035461014084015160405163c1bc00ff60e01b81526001600160a01b03909216935063c1bc00ff9250611d65918690600401612a25565b600060405180830381600087803b158015611d7f57600080fd5b505af1158015611d93573d6000803e3d6000fd5b505050505050565b604080516101c0810182526000808252606060208301529091820190815260200160608152602001600081526020016060815260200160608152602001600081526020016060815260200160608152602001606081526020016060815260200160008152602001600061ffff1681525090565b6001600160c01b031981168114611e2457600080fd5b50565b8035611e3281611e0e565b919050565b600060208284031215611e4957600080fd5b8135610a9e81611e0e565b60005b83811015611e6f578181015183820152602001611e57565b83811115611e7e576000848401525b50505050565b60008151808452611e9c816020860160208601611e54565b601f01601f19169290920160200192915050565b602081526000610a9e6020830184611e84565b634e487b7160e01b600052604160045260246000fd5b6040516101c081016001600160401b0381118282101715611efc57611efc611ec3565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611f2a57611f2a611ec3565b604052919050565b60006001600160401b03821115611f4b57611f4b611ec3565b50601f01601f191660200190565b600082601f830112611f6a57600080fd5b8135611f7d611f7882611f32565b611f02565b818152846020838601011115611f9257600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611fc457600080fd5b83356001600160401b03811115611fda57600080fd5b611fe686828701611f59565b9660208601359650604090950135949350505050565b606080825284519082018190526000906020906080840190828801845b8281101561203f5781516001600160c01b03191684529284019290840190600101612019565b505050908301949094525060400152919050565b6000806000806080858703121561206957600080fd5b84356001600160401b038082111561208057600080fd5b61208c88838901611f59565b955060208701359150808211156120a257600080fd5b506120af87828801611f59565b949794965050505060408301359260600135919050565b600281106120e457634e487b7160e01b600052602160045260246000fd5b9052565b80516001600160c01b031916825260006101c0602083015181602086015261211282860182611e84565b915050604083015161212760408601826120c6565b506060830151848203606086015261213f8282611e84565b9150506080830151608085015260a083015184820360a08601526121638282611e84565b91505060c083015184820360c086015261217d8282611e84565b91505060e083015160e085015261010080840151858303828701526121a28382611e84565b9250505061012080840151858303828701526121be8382611e84565b9250505061014080840151858303828701526121da8382611e84565b9250505061016080840151858303828701526121f68382611e84565b925050506101808084015181860152506101a08084015161221c8287018261ffff169052565b5090949350505050565b602081526000610a9e60208301846120e8565b60028110611e2457600080fd5b8035611e3281612239565b61ffff81168114611e2457600080fd5b8035611e3281612251565b60006020828403121561227e57600080fd5b81356001600160401b038082111561229557600080fd5b908301906101c082860312156122aa57600080fd5b6122b2611ed9565b6122bb83611e27565b81526020830135828111156122cf57600080fd5b6122db87828601611f59565b6020830152506122ed60408401612246565b604082015260608301358281111561230457600080fd5b61231087828601611f59565b6060830152506080830135608082015260a08301358281111561233257600080fd5b61233e87828601611f59565b60a08301525060c08301358281111561235657600080fd5b61236287828601611f59565b60c08301525060e083013560e0820152610100808401358381111561238657600080fd5b61239288828701611f59565b82840152505061012080840135838111156123ac57600080fd5b6123b888828701611f59565b82840152505061014080840135838111156123d257600080fd5b6123de88828701611f59565b82840152505061016080840135838111156123f857600080fd5b61240488828701611f59565b828401525050610180915081830135828201526101a09150612427828401612261565b91810191909152949350505050565b6000606082016060835280865180835260808501915060808160051b8601019250602080890160005b8381101561248d57607f1988870301855261247b8683516120e8565b9550938201939082019060010161245f565b5050850196909652506040909201929092529392505050565b6001600160c01b031991909116815260200190565b6000602082840312156124cd57600080fd5b5051919050565b60208082526012908201527115525108191bd95cc81b9bdd08195e1a5cdd60721b604082015260600190565b600082601f83011261251157600080fd5b815161251f611f7882611f32565b81815284602083860101111561253457600080fd5b6103ab826020830160208701611e54565b60006020828403121561255757600080fd5b81516001600160401b0381111561256d57600080fd5b6103ab84828501612500565b60608152600061258c6060830186611e84565b60208301949094525060400152919050565b6000806000606084860312156125b357600080fd5b83516001600160401b03808211156125ca57600080fd5b818601915086601f8301126125de57600080fd5b81516020828211156125f2576125f2611ec3565b8160051b9250612603818401611f02565b828152928401810192818101908a85111561261d57600080fd5b948201945b8486101561263b57855182529482019490820190612622565b91890151604090990151919a98995090979650505050505050565b634e487b7160e01b600052603260045260246000fd5b8051611e3281611e0e565b60006020828403121561268957600080fd5b8151610a9e81611e0e565b634e487b7160e01b600052601160045260246000fd5b60006000198214156126be576126be612694565b5060010190565b600083516126d7818460208801611e54565b8351908301906126eb818360208801611e54565b01949350505050565b8051611e3281612239565b8051611e3281612251565b60006020828403121561271c57600080fd5b81516001600160401b038082111561273357600080fd5b908301906101c0828603121561274857600080fd5b612750611ed9565b6127598361266c565b815260208301518281111561276d57600080fd5b61277987828601612500565b60208301525061278b604084016126f4565b60408201526060830151828111156127a257600080fd5b6127ae87828601612500565b6060830152506080830151608082015260a0830151828111156127d057600080fd5b6127dc87828601612500565b60a08301525060c0830151828111156127f457600080fd5b61280087828601612500565b60c08301525060e083015160e0820152610100808401518381111561282457600080fd5b61283088828701612500565b828401525050610120808401518381111561284a57600080fd5b61285688828701612500565b828401525050610140808401518381111561287057600080fd5b61287c88828701612500565b828401525050610160808401518381111561289657600080fd5b6128a288828701612500565b828401525050610180915081830151828201526101a091506124278284016126ff565b6000828210156128d7576128d7612694565b500390565b6001600160a01b03831681526040602082018190526000906103ab90830184611e84565b60008251612912818460208701611e54565b9190910192915050565b60006020828403121561292e57600080fd5b81518015158114610a9e57600080fd5b6000821982111561295157612951612694565b500190565b8281526040602082015260006103ab60408301846120e8565b6001600160401b0360c01b851681526080602082015260006129946080830186611e84565b82810360408401526129a68186611e84565b91505082606083015295945050505050565b6000875160206129cb8285838d01611e54565b8851918401916129de8184848d01611e54565b80830192505087825286516129f881838501848b01611e54565b8651920191612a0c81838501848a01611e54565b9190910190810193909352505060400195945050505050565b604081526000612a386040830185611e84565b9050826020830152939250505056fea2646970667358221220935f3b9c2170d65f5339e5ecd1fa3e2370cfed21f3a2cbe455d4df05dcbf98a364736f6c63430008090033";

    public static final String FUNC_GETPAYMENTADVICE = "getPaymentAdvice";

    public static final String FUNC_GETPAYMENTADVICEBGAMOUNT = "getPaymentAdviceBGAmount";

    public static final String FUNC_GETPAYMENTADVICECURRENCYTYPE = "getPaymentAdviceCurrencyType";

    public static final String FUNC_GETPAYMENTADVICELISTBYPAYMENTADVICEREFANDEGPID = "getPaymentAdviceListByPaymentAdviceRefAndEgpId";

    public static final String FUNC_GETPAYMENTADVICEPROCURINGENTITYGIDYUID = "getPaymentAdviceProcuringEntityGidyUid";

    public static final String FUNC_GETPAYMENTADVICEUIDSBYEGPID = "getPaymentAdviceUidsByEgpId";

    public static final String FUNC_GETPAYMENTADVICEUIDSBYPAYMENTADVICEREFANDEGPID = "getPaymentAdviceUidsByPaymentAdviceRefAndEgpId";

    public static final String FUNC_GETPAYMENTADVICEUIDSBYPROCURINGENTITYGID = "getPaymentAdviceUidsByProcuringEntityGid";

    public static final String FUNC_GETPAYMENTADVICEUIDSBYVENDORGID = "getPaymentAdviceUidsByVendorGid";

    public static final String FUNC_GETPAYMENTADVICEVENDORGIDBYUID = "getPaymentAdviceVendorGidbyUid";

    public static final String FUNC_ISUIDEXISTS = "isUidExists";

    public static final String FUNC_REGISTERPAYMENTADVICE = "registerPaymentAdvice";

    public static final Event PAYMENTADVICEREGISTERED_EVENT = new Event("PaymentAdviceRegistered",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes8>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected PaymentAdviceManager(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected PaymentAdviceManager(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected PaymentAdviceManager(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected PaymentAdviceManager(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static List<PaymentAdviceRegisteredEventResponse> getPaymentAdviceRegisteredEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(PAYMENTADVICEREGISTERED_EVENT, transactionReceipt);
        ArrayList<PaymentAdviceRegisteredEventResponse> responses = new ArrayList<PaymentAdviceRegisteredEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PaymentAdviceRegisteredEventResponse typedResponse = new PaymentAdviceRegisteredEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._paUid = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._paymentAdviceReferenceNumber = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._peGid = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._amendment = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PaymentAdviceRegisteredEventResponse> paymentAdviceRegisteredEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PaymentAdviceRegisteredEventResponse>() {
            @Override
            public PaymentAdviceRegisteredEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PAYMENTADVICEREGISTERED_EVENT, log);
                PaymentAdviceRegisteredEventResponse typedResponse = new PaymentAdviceRegisteredEventResponse();
                typedResponse.log = log;
                typedResponse._paUid = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._paymentAdviceReferenceNumber = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._peGid = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._amendment = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PaymentAdviceRegisteredEventResponse> paymentAdviceRegisteredEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PAYMENTADVICEREGISTERED_EVENT));
        return paymentAdviceRegisteredEventFlowable(filter);
    }

    public RemoteFunctionCall<PaymentAdvice> getPaymentAdvice(byte[] _uid) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPAYMENTADVICE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes8(_uid)),
                Arrays.<TypeReference<?>>asList(new TypeReference<PaymentAdvice>() {}));
        return executeRemoteCallSingleValueReturn(function, PaymentAdvice.class);
    }

    public RemoteFunctionCall<BigInteger> getPaymentAdviceBGAmount(byte[] _uid) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPAYMENTADVICEBGAMOUNT,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes8(_uid)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> getPaymentAdviceCurrencyType(byte[] _uid) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPAYMENTADVICECURRENCYTYPE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes8(_uid)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple3<List<PaymentAdvice>, BigInteger, BigInteger>> getPaymentAdviceListByPaymentAdviceRefAndEgpId(String _paymentAdviceReferenceNumber, String _egpSystemId, BigInteger _toExcluded, BigInteger _count) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPAYMENTADVICELISTBYPAYMENTADVICEREFANDEGPID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_paymentAdviceReferenceNumber),
                new org.web3j.abi.datatypes.Utf8String(_egpSystemId),
                new org.web3j.abi.datatypes.generated.Uint256(_toExcluded),
                new org.web3j.abi.datatypes.generated.Uint256(_count)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<PaymentAdvice>>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple3<List<PaymentAdvice>, BigInteger, BigInteger>>(function,
                new Callable<Tuple3<List<PaymentAdvice>, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<List<PaymentAdvice>, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<List<PaymentAdvice>, BigInteger, BigInteger>(
                                convertToNative((List<PaymentAdvice>) results.get(0).getValue()),
                                (BigInteger) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<String> getPaymentAdviceProcuringEntityGidyUid(byte[] _uid) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPAYMENTADVICEPROCURINGENTITYGIDYUID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes8(_uid)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple3<List<byte[]>, BigInteger, BigInteger>> getPaymentAdviceUidsByEgpId(String _egpId, BigInteger _toExcluded, BigInteger _count) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPAYMENTADVICEUIDSBYEGPID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_egpId),
                new org.web3j.abi.datatypes.generated.Uint256(_toExcluded),
                new org.web3j.abi.datatypes.generated.Uint256(_count)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Bytes8>>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple3<List<byte[]>, BigInteger, BigInteger>>(function,
                new Callable<Tuple3<List<byte[]>, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<List<byte[]>, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<List<byte[]>, BigInteger, BigInteger>(
                                convertToNative((List<Bytes8>) results.get(0).getValue()),
                                (BigInteger) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple3<List<byte[]>, BigInteger, BigInteger>> getPaymentAdviceUidsByPaymentAdviceRefAndEgpId(String _paymentAdviceReferenceNumber, String _egpSystemId, BigInteger _toExcluded, BigInteger _count) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPAYMENTADVICEUIDSBYPAYMENTADVICEREFANDEGPID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_paymentAdviceReferenceNumber),
                new org.web3j.abi.datatypes.Utf8String(_egpSystemId),
                new org.web3j.abi.datatypes.generated.Uint256(_toExcluded),
                new org.web3j.abi.datatypes.generated.Uint256(_count)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Bytes8>>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple3<List<byte[]>, BigInteger, BigInteger>>(function,
                new Callable<Tuple3<List<byte[]>, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<List<byte[]>, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<List<byte[]>, BigInteger, BigInteger>(
                                convertToNative((List<Bytes8>) results.get(0).getValue()),
                                (BigInteger) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple3<List<byte[]>, BigInteger, BigInteger>> getPaymentAdviceUidsByProcuringEntityGid(String _gid, BigInteger _toExcluded, BigInteger _count) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPAYMENTADVICEUIDSBYPROCURINGENTITYGID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_gid),
                new org.web3j.abi.datatypes.generated.Uint256(_toExcluded),
                new org.web3j.abi.datatypes.generated.Uint256(_count)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Bytes8>>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple3<List<byte[]>, BigInteger, BigInteger>>(function,
                new Callable<Tuple3<List<byte[]>, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<List<byte[]>, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<List<byte[]>, BigInteger, BigInteger>(
                                convertToNative((List<Bytes8>) results.get(0).getValue()),
                                (BigInteger) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple3<List<byte[]>, BigInteger, BigInteger>> getPaymentAdviceUidsByVendorGid(String _vendorGid, BigInteger _toExcluded, BigInteger _count) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPAYMENTADVICEUIDSBYVENDORGID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_vendorGid),
                new org.web3j.abi.datatypes.generated.Uint256(_toExcluded),
                new org.web3j.abi.datatypes.generated.Uint256(_count)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Bytes8>>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple3<List<byte[]>, BigInteger, BigInteger>>(function,
                new Callable<Tuple3<List<byte[]>, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<List<byte[]>, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<List<byte[]>, BigInteger, BigInteger>(
                                convertToNative((List<Bytes8>) results.get(0).getValue()),
                                (BigInteger) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<String> getPaymentAdviceVendorGidbyUid(byte[] _uid) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPAYMENTADVICEVENDORGIDBYUID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes8(_uid)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Boolean> isUidExists(byte[] _uid) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISUIDEXISTS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes8(_uid)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> registerPaymentAdvice(PaymentAdvice _paymentAdvice) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REGISTERPAYMENTADVICE,
                Arrays.<Type>asList(_paymentAdvice),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static PaymentAdviceManager load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new PaymentAdviceManager(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static PaymentAdviceManager load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new PaymentAdviceManager(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static PaymentAdviceManager load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new PaymentAdviceManager(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static PaymentAdviceManager load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new PaymentAdviceManager(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<PaymentAdviceManager> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _permIntf, String _vendorManager, String _procuringEntityManager, String _paymentAdviceModel, String _vcnFunctionalManager) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _permIntf),
                new org.web3j.abi.datatypes.Address(160, _vendorManager),
                new org.web3j.abi.datatypes.Address(160, _procuringEntityManager),
                new org.web3j.abi.datatypes.Address(160, _paymentAdviceModel),
                new org.web3j.abi.datatypes.Address(160, _vcnFunctionalManager)));
        return deployRemoteCall(PaymentAdviceManager.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<PaymentAdviceManager> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _permIntf, String _vendorManager, String _procuringEntityManager, String _paymentAdviceModel, String _vcnFunctionalManager) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _permIntf),
                new org.web3j.abi.datatypes.Address(160, _vendorManager),
                new org.web3j.abi.datatypes.Address(160, _procuringEntityManager),
                new org.web3j.abi.datatypes.Address(160, _paymentAdviceModel),
                new org.web3j.abi.datatypes.Address(160, _vcnFunctionalManager)));
        return deployRemoteCall(PaymentAdviceManager.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<PaymentAdviceManager> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _permIntf, String _vendorManager, String _procuringEntityManager, String _paymentAdviceModel, String _vcnFunctionalManager) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _permIntf),
                new org.web3j.abi.datatypes.Address(160, _vendorManager),
                new org.web3j.abi.datatypes.Address(160, _procuringEntityManager),
                new org.web3j.abi.datatypes.Address(160, _paymentAdviceModel),
                new org.web3j.abi.datatypes.Address(160, _vcnFunctionalManager)));
        return deployRemoteCall(PaymentAdviceManager.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<PaymentAdviceManager> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _permIntf, String _vendorManager, String _procuringEntityManager, String _paymentAdviceModel, String _vcnFunctionalManager) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _permIntf),
                new org.web3j.abi.datatypes.Address(160, _vendorManager),
                new org.web3j.abi.datatypes.Address(160, _procuringEntityManager),
                new org.web3j.abi.datatypes.Address(160, _paymentAdviceModel),
                new org.web3j.abi.datatypes.Address(160, _vcnFunctionalManager)));
        return deployRemoteCall(PaymentAdviceManager.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class PaymentAdvice extends DynamicStruct {
        public byte[] uid;

        public String egpSystemId;

        public BigInteger paymentType;

        public String paymentAdviceReferenceNumber;

        public BigInteger validityPeriodDays;

        public String bankGuaranteeClaimExpiryDate;

        public String currency;

        public BigInteger bankGuaranteeAmount;

        public String vendorGid;

        public String vendorName;

        public String procuringEntityGid;

        public String procuringEntityName;

        public BigInteger amendment;

        public BigInteger version;

        public PaymentAdvice(byte[] uid, String egpSystemId, BigInteger paymentType, String paymentAdviceReferenceNumber, BigInteger validityPeriodDays, String bankGuaranteeClaimExpiryDate, String currency, BigInteger bankGuaranteeAmount, String vendorGid, String vendorName, String procuringEntityGid, String procuringEntityName, BigInteger amendment, BigInteger version) {
            super(new org.web3j.abi.datatypes.generated.Bytes8(uid),
                    new org.web3j.abi.datatypes.Utf8String(egpSystemId),
                    new org.web3j.abi.datatypes.generated.Uint8(paymentType),
                    new org.web3j.abi.datatypes.Utf8String(paymentAdviceReferenceNumber),
                    new org.web3j.abi.datatypes.generated.Uint256(validityPeriodDays),
                    new org.web3j.abi.datatypes.Utf8String(bankGuaranteeClaimExpiryDate),
                    new org.web3j.abi.datatypes.Utf8String(currency),
                    new org.web3j.abi.datatypes.generated.Uint256(bankGuaranteeAmount),
                    new org.web3j.abi.datatypes.Utf8String(vendorGid),
                    new org.web3j.abi.datatypes.Utf8String(vendorName),
                    new org.web3j.abi.datatypes.Utf8String(procuringEntityGid),
                    new org.web3j.abi.datatypes.Utf8String(procuringEntityName),
                    new org.web3j.abi.datatypes.generated.Uint256(amendment),
                    new org.web3j.abi.datatypes.generated.Uint16(version));
            this.uid = uid;
            this.egpSystemId = egpSystemId;
            this.paymentType = paymentType;
            this.paymentAdviceReferenceNumber = paymentAdviceReferenceNumber;
            this.validityPeriodDays = validityPeriodDays;
            this.bankGuaranteeClaimExpiryDate = bankGuaranteeClaimExpiryDate;
            this.currency = currency;
            this.bankGuaranteeAmount = bankGuaranteeAmount;
            this.vendorGid = vendorGid;
            this.vendorName = vendorName;
            this.procuringEntityGid = procuringEntityGid;
            this.procuringEntityName = procuringEntityName;
            this.amendment = amendment;
            this.version = version;
        }

        public PaymentAdvice(Bytes8 uid, Utf8String egpSystemId, Uint8 paymentType, Utf8String paymentAdviceReferenceNumber, Uint256 validityPeriodDays, Utf8String bankGuaranteeClaimExpiryDate, Utf8String currency, Uint256 bankGuaranteeAmount, Utf8String vendorGid, Utf8String vendorName, Utf8String procuringEntityGid, Utf8String procuringEntityName, Uint256 amendment, Uint16 version) {
            super(uid, egpSystemId, paymentType, paymentAdviceReferenceNumber, validityPeriodDays, bankGuaranteeClaimExpiryDate, currency, bankGuaranteeAmount, vendorGid, vendorName, procuringEntityGid, procuringEntityName, amendment, version);
            this.uid = uid.getValue();
            this.egpSystemId = egpSystemId.getValue();
            this.paymentType = paymentType.getValue();
            this.paymentAdviceReferenceNumber = paymentAdviceReferenceNumber.getValue();
            this.validityPeriodDays = validityPeriodDays.getValue();
            this.bankGuaranteeClaimExpiryDate = bankGuaranteeClaimExpiryDate.getValue();
            this.currency = currency.getValue();
            this.bankGuaranteeAmount = bankGuaranteeAmount.getValue();
            this.vendorGid = vendorGid.getValue();
            this.vendorName = vendorName.getValue();
            this.procuringEntityGid = procuringEntityGid.getValue();
            this.procuringEntityName = procuringEntityName.getValue();
            this.amendment = amendment.getValue();
            this.version = version.getValue();
        }
    }

    public static class PaymentAdviceRegisteredEventResponse extends BaseEventResponse {
        public byte[] _paUid;

        public String _paymentAdviceReferenceNumber;

        public String _peGid;

        public BigInteger _amendment;
    }
}
